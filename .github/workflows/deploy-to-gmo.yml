name: Deploy to GMO Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'service-site/package-lock.json'

      - name: Debug - List directories
        run: |
          ls -la
          ls -la service-site || echo "service-site directory not found"

      - name: Install dependencies
        working-directory: service-site
        run: npm ci

      - name: Build project
        working-directory: service-site
        run: npm run build

      - name: Debug - Check build output
        working-directory: service-site
        run: |
          ls -la
          ls -la dist || echo "dist directory not found"

      - name: Debug SSH settings
        run: |
          echo "Checking SSH configuration..."
          echo "SSH_USERNAME is set: ${{ secrets.SSH_USERNAME != '' }}"
          echo "SSH_HOST is set: ${{ secrets.SSH_HOST != '' }}"
          echo "REMOTE_PATH is set: ${{ secrets.REMOTE_PATH != '' }}"
          echo "KNOWN_HOSTS is set: ${{ secrets.KNOWN_HOSTS != '' }}"
          echo "SSH_PRIVATE_KEY is set: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
          echo "First few characters of SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY != '' && format('{0}...', secrets.SSH_PRIVATE_KEY, 0, 10) || 'Not provided' }}"

      # まったく新しい方法でSSHキーを生成
      - name: Generate new SSH keys
        run: |
          mkdir -p ~/.ssh
          
          # 既存の鍵の確認
          echo "Checking existing key content (first few chars):"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -c 20 || echo "No key content found"
          
          # ワークフロー内で新しい鍵を生成
          echo "Generating fresh SSH keys..."
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N "" -C "github-actions-deploy@example.com"
          
          # 公開鍵を表示
          echo "新しく生成された公開鍵（サーバーに設定する必要があります）:"
          cat ~/.ssh/id_rsa.pub
          
          # SSHディレクトリの権限を設定
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          
          # SSH設定ファイルの作成
          echo "Host gmo
            HostName www295.onamae.ne.jp
            User ${{ secrets.SSH_USERNAME }}
            Port 8022
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no" > ~/.ssh/config
          
          chmod 600 ~/.ssh/config
          
          # サーバーのホストキーを自動的に取得
          ssh-keyscan -p 8022 -H www295.onamae.ne.jp >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          
          # SSH設定の確認
          ls -la ~/.ssh
          cat ~/.ssh/config

      # SSHの詳細テスト
      - name: Test SSH connection
        run: |
          # サーバー側のログを確認（認証失敗の詳細情報を得るため）
          echo "Testing SSH connection with verbose output..."
          
          # より詳細な情報を取得するためにデバッグモードでテスト
          ssh -vvv -p 8022 ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp "echo SSH connection successful" || echo "SSH接続に失敗しました"
          
          # 公開鍵を再度表示
          echo "公開鍵（正しく設定されているか確認）:"
          cat ~/.ssh/id_rsa.pub
          
          # SSHエージェントを使って試す
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          ssh -p 8022 -o BatchMode=yes ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp "echo SSH with agent successful" || echo "SSHエージェントでの接続も失敗しました"

      # デプロイステップを有効化
      - name: Deploy to GMO Cloud
        working-directory: service-site
        run: |
          echo "Starting deployment to www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }}"
          
          # SSHエージェントを使用したrsync
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          
          # rsyncでのデプロイを試行
          rsync -avz -e "ssh -p 8022" --delete dist/ ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }} || \
          
          # rsyncが失敗した場合はscpを試行
          echo "rsyncでの転送に失敗しました。scpを試行します..." && \
          scp -P 8022 -r dist/* ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }} || \
          
          # scpも失敗した場合はtarを使用
          echo "scpでの転送も失敗しました。tarを使用して転送を試みます..." && \
          tar -czf dist.tar.gz -C dist . && \
          scp -P 8022 dist.tar.gz ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp:/tmp/ && \
          ssh -p 8022 ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp "cd ${{ secrets.REMOTE_PATH }} && tar -xzf /tmp/dist.tar.gz && rm /tmp/dist.tar.gz" && \
          echo "tarを使用したデプロイが完了しました！" || \
          
          # すべて失敗した場合
          echo "すべての転送方法が失敗しました。サーバー設定を確認してください。"
          
          echo "デプロイプロセスが終了しました。" 