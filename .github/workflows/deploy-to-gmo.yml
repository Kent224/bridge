name: Deploy to GMO Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'service-site/package-lock.json'

      - name: Debug - List directories
        run: |
          ls -la
          ls -la service-site || echo "service-site directory not found"

      - name: Install dependencies
        working-directory: service-site
        run: npm ci

      - name: Build project
        working-directory: service-site
        run: npm run build

      - name: Debug - Check build output
        working-directory: service-site
        run: |
          ls -la
          ls -la dist || echo "dist directory not found"

      - name: Debug host value
        run: |
          echo "Checking SSH configuration..."
          echo "SSH_USERNAME is set: ${{ secrets.SSH_USERNAME != '' }}"
          echo "SSH_HOST is set: ${{ secrets.SSH_HOST != '' }}"
          echo "REMOTE_PATH is set: ${{ secrets.REMOTE_PATH != '' }}"
          echo "KNOWN_HOSTS is set: ${{ secrets.KNOWN_HOSTS != '' }}"

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Test SSH connection with verbose output
        run: |
          ssh -v -p 8022 -o BatchMode=yes -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp "echo SSH connection successful"

      - name: Deploy to GMO Cloud
        working-directory: service-site
        run: |
          echo "Starting deployment to www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }}"
          rsync -avz -e "ssh -p 8022 -o StrictHostKeyChecking=no" --delete dist/ ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }}
          echo "デプロイが完了しました！" 