name: Deploy to GMO Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'service-site/package-lock.json'

      - name: Debug - List directories
        run: |
          ls -la
          ls -la service-site || echo "service-site directory not found"

      - name: Install dependencies
        working-directory: service-site
        run: npm ci

      - name: Build project
        working-directory: service-site
        run: npm run build

      - name: Debug - Check build output
        working-directory: service-site
        run: |
          ls -la
          ls -la dist || echo "dist directory not found"

      - name: Debug SSH settings
        run: |
          echo "Checking SSH configuration..."
          echo "SSH_USERNAME is set: ${{ secrets.SSH_USERNAME != '' }}"
          echo "SSH_HOST is set: ${{ secrets.SSH_HOST != '' }}"
          echo "REMOTE_PATH is set: ${{ secrets.REMOTE_PATH != '' }}"
          echo "KNOWN_HOSTS is set: ${{ secrets.KNOWN_HOSTS != '' }}"
          echo "SSH_PRIVATE_KEY is set: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
          echo "First few characters of SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY != '' && format('{0}...', secrets.SSH_PRIVATE_KEY, 0, 10) || 'Not provided' }}"

      # 秘密鍵のセットアップを改善
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          
          # SSHキーの内容をデバッグ（最初の数文字だけ表示）
          echo "SSH Key starts with: $(echo '${{ secrets.SSH_PRIVATE_KEY }}' | cut -c1-20)..."
          
          # 秘密鍵の最初の行をチェック
          FIRST_LINE=$(echo '${{ secrets.SSH_PRIVATE_KEY }}' | head -n 1)
          echo "First line of the key: ${FIRST_LINE:0:30}..."
          
          # PEMフォーマットの鍵を使用
          echo "Using PEM format private key"
          touch ~/.ssh/id_rsa
          # まず一般的なPEM形式のヘッダーとフッターを確認
          if [[ "$FIRST_LINE" != "-----BEGIN"* ]]; then
            echo "Key doesn't start with proper header, adding PEM format headers"
            echo "-----BEGIN RSA PRIVATE KEY-----" > ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" | sed -e '/-----BEGIN/d' -e '/-----END/d' >> ~/.ssh/id_rsa
            echo "-----END RSA PRIVATE KEY-----" >> ~/.ssh/id_rsa
          else
            echo "Key already has proper headers"
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          fi
          chmod 600 ~/.ssh/id_rsa
          
          # 鍵の形式とコンテンツを詳細に確認
          echo "Private key file info:"
          file ~/.ssh/id_rsa || echo "Failed to get file info"
          echo "Private key beginning (first 3 lines):"
          head -n 3 ~/.ssh/id_rsa || echo "Failed to read key"
          echo "Private key ending (last 3 lines):"
          tail -n 3 ~/.ssh/id_rsa || echo "Failed to read key"
          echo "Private key length in bytes:"
          wc -c ~/.ssh/id_rsa || echo "Failed to get key size"
          
          # OpenSSLを使用して鍵を検証
          echo "Validating private key with OpenSSL:"
          openssl rsa -in ~/.ssh/id_rsa -check -noout || echo "OpenSSL validation failed - key may be in wrong format"
          
          # 秘密鍵から公開鍵を生成しようとしてみる（エラーでも続行）
          echo "Trying to derive public key (may fail if format is incorrect):"
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub 2>/dev/null || echo "Could not generate public key - key may be in wrong format"
          
          if [ -f ~/.ssh/id_rsa.pub ]; then
            echo "Public key successfully generated"
            echo "Public key: $(cat ~/.ssh/id_rsa.pub)"
          fi
          
          # known_hostsファイルの設定
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          
          # SSH設定を確認
          ls -la ~/.ssh

      # さらに別の鍵フォーマットを試す
      - name: Try alternative key formats
        run: |
          echo "Trying alternative key formats..."
          
          # OpenSSHフォーマットを試す
          echo "Attempting OpenSSH format..."
          cp ~/.ssh/id_rsa ~/.ssh/id_rsa_pem
          echo "-----BEGIN OPENSSH PRIVATE KEY-----" > ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa_pem | grep -v "BEGIN\|END" >> ~/.ssh/id_rsa
          echo "-----END OPENSSH PRIVATE KEY-----" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # 鍵の検証
          echo "Checking OpenSSH format key:"
          file ~/.ssh/id_rsa
          # 公開鍵の生成を試みる
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.openssh.pub 2>/dev/null || echo "Could not generate public key from OpenSSH format"
          
          if [ -f ~/.ssh/id_rsa.openssh.pub ]; then
            echo "OpenSSH format worked! Public key: $(cat ~/.ssh/id_rsa.openssh.pub)"
            # 成功した場合は終了
            touch ~/.ssh/openssh_format_worked
          else
            # PEMフォーマットに戻す
            echo "OpenSSH format failed, reverting to PEM format"
            cp ~/.ssh/id_rsa_pem ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
          fi

      # 別のディレクトリに鍵を配置してみる
      - name: Create alternative SSH directory
        run: |
          # ホームディレクトリ直下に鍵を配置
          cp ~/.ssh/id_rsa ~/id_rsa
          chmod 600 ~/id_rsa
          
          # SSHの設定ファイルを作成
          echo "IdentityFile ~/id_rsa" > ~/.ssh/config
          echo "Port 8022" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          
          echo "SSH config created:"
          cat ~/.ssh/config

      - name: Test SSH connection with full debug
        run: |
          echo "Testing SSH connection with default key location..."
          # 完全なデバッグ情報でSSH接続をテスト
          ssh -vvv -p 8022 -o BatchMode=yes -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp "echo SSH connection successful" || true
          
          echo "Testing with alternative key location..."
          ssh -vvv -i ~/id_rsa -p 8022 -o BatchMode=yes -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp "echo SSH connection successful" || true
          
          # SSHデバッグ情報をより詳細に表示
          echo "SSH debug info:"
          SSH_AUTH_SOCK= ssh-add -l || echo "No keys in agent"
          
          # キーの形式を表示
          echo "Key format according to ssh-keygen:"
          ssh-keygen -l -f ~/.ssh/id_rsa || echo "Could not get key fingerprint"

      - name: Deploy to GMO Cloud
        working-directory: service-site
        run: |
          echo "Starting deployment to www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }}"
          rsync -avz -e "ssh -p 8022 -o StrictHostKeyChecking=no" --delete dist/ ${{ secrets.SSH_USERNAME }}@www295.onamae.ne.jp:${{ secrets.REMOTE_PATH }}
          echo "デプロイが完了しました！" 